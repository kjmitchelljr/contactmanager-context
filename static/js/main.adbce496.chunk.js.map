{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","className","name","onClick","style","cursor","bind","float","color","react_router_dom","to","marginRight","email","phone","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","fetch","then","response","json","App","context_Provider","basename","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.adbce496.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(\n          contact =>\n            contact.id === action.payload.id\n              ? (contact = action.payload)\n              : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    this.setState({ contacts: res.data });\n  }\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    } catch (e) {\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    }\n  };\n\n  render() {\n    const { contact } = this.props;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {contact.name}{' '}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: 'pointer' }}\n                />\n                <i\n                  onClick={this.onDeleteClick.bind(this, contact.id, dispatch)}\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                />\n                <Link to={`contact/edit/${contact.id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem'\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">{contact.email}</li>\n                  <li className=\"list-group-item\">{contact.phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div>\n      <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input\n          type={type}\n          name={name}\n          className={classnames('form-control form-control-lg', {\n            'is-invalid': error\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n      </div>\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.object\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      'https://jsonplaceholder.typicode.com/users',\n      newContact\n    );\n\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n    // Clear state\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-light btn-block\"\n                    value=\"Add Contact\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const { id } = this.props.match.params;\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n    // Clear state\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-light btn-block\"\n                    value=\"Update Contact\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-quesiton\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">version 1.0.0</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n  state = {\n    title: ''\n  };\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title\n        })\n      );\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Test</h1>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename=\"contactmanager-context\">\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}